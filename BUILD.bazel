load("@bazel_gazelle//:def.bzl", "gazelle")
load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library")
load("//tools/build_defs:umbracore_module.bzl", "umbracore_foundation_free_module_creator")

# gazelle:prefix github.com/mpy-dev-ml/UmbraCore
gazelle(
    name = "gazelle",
    command = "fix",
)

package(default_visibility = ["//visibility:public"])

string_flag(
    name = "cpu",
    build_setting_default = "darwin_arm64",
)

platform(
    name = "macos_arm64",
    constraint_values = [
        "@platforms//os:macos",
        "@platforms//cpu:arm64",
    ],
)

# Foundation-free module generators
umbracore_foundation_free_module_creator(
    name = "generate_url_path_module",
    module_name = "URLPath",
)

umbracore_foundation_free_module_creator(
    name = "generate_binary_data_module",
    module_name = "BinaryData",
)

umbracore_foundation_free_module_creator(
    name = "generate_binary_stream_module",
    module_name = "BinaryStream",
)

umbracore_foundation_free_module_creator(
    name = "generate_file_path_module",
    module_name = "FilePath",
)

umbracore_foundation_free_module_creator(
    name = "generate_serialization_module",
    module_name = "Serialization",
)

umbracore_foundation_free_module_creator(
    name = "generate_string_conversion_module",
    module_name = "StringConversion",
)

umbracore_foundation_free_module_creator(
    name = "generate_concurrency_primitives_module",
    module_name = "ConcurrencyPrimitives",
)
